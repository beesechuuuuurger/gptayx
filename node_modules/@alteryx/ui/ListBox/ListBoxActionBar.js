"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Checkbox = _interopRequireDefault(require("../Checkbox"));

var _Divider = _interopRequireDefault(require("../Divider"));

var _FormControlLabel = _interopRequireDefault(require("../FormControlLabel"));

var _Grid = _interopRequireDefault(require("../Grid"));

var _ListItem = _interopRequireDefault(require("../ListItem"));

var _makeStyles = _interopRequireDefault(require("@material-ui/core/styles/makeStyles"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var useStyles = (0, _makeStyles.default)(function (_ref) {
  var palette = _ref.palette,
      spacing = _ref.spacing;
  return {
    checkbox: {
      margin: spacing(0, 2, 0, 2.5),
      padding: 0
    },
    formControlLabel: {
      opacity: function opacity(_ref2) {
        var disabled = _ref2.disabled;
        return disabled ? 0.5 : 1;
      },
      marginBottom: 0
    },
    listItem: {
      height: function height(_ref3) {
        var rowHeight = _ref3.rowHeight;
        return rowHeight;
      },
      padding: 0
    },
    selectAllLabel: {
      color: palette.text.main
    }
  };
});

var _ref9 = /*#__PURE__*/_react.default.createElement(_Grid.default, {
  item: true
}, /*#__PURE__*/_react.default.createElement(_Divider.default, {
  light: true
}));

var ListBoxActionBar = function ListBoxActionBar(_ref4) {
  var actions = _ref4.actions,
      actionableItems = _ref4.actionableItems,
      checkAllText = _ref4.checkAllText,
      items = _ref4.items,
      onSelectAllChange = _ref4.onSelectAllChange,
      rowHeight = _ref4.rowHeight,
      showCheckAll = _ref4.showCheckAll;
  var noActionableItems = !actionableItems.length;
  var relevantItems = noActionableItems ? items : actionableItems;
  var nonDisabledItems = relevantItems.filter(function (_ref5) {
    var disabled = _ref5.disabled;
    return !disabled;
  });
  var noItems = noActionableItems || nonDisabledItems.length === 0;
  var checked = (0, _react.useMemo)(function () {
    var allSelected = nonDisabledItems.every(function (_ref6) {
      var selected = _ref6.selected;
      return selected;
    });
    return nonDisabledItems.length > 0 && allSelected;
  }, [nonDisabledItems]);
  var indeterminate = (0, _react.useMemo)(function () {
    return !checked && relevantItems.some(function (_ref7) {
      var selected = _ref7.selected;
      return selected;
    });
  }, [relevantItems, checked]);
  var toggleSelectAll = (0, _react.useMemo)(function () {
    return !!actionableItems.filter(function (_ref8) {
      var disabled = _ref8.disabled,
          selected = _ref8.selected;
      return !disabled && !selected;
    }).length;
  }, [actionableItems]);
  var localClasses = useStyles({
    disabled: noItems,
    rowHeight: rowHeight
  });
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, (showCheckAll || actions) && /*#__PURE__*/_react.default.createElement(_Grid.default, {
    item: true,
    xs: "auto"
  }, /*#__PURE__*/_react.default.createElement(_ListItem.default, {
    className: localClasses.listItem,
    dense: true,
    disableGutters: true
  }, /*#__PURE__*/_react.default.createElement(_Grid.default, {
    alignItems: "center",
    container: true
  }, showCheckAll && /*#__PURE__*/_react.default.createElement(_Grid.default, {
    item: true,
    xs: "auto"
  }, /*#__PURE__*/_react.default.createElement(_FormControlLabel.default, {
    className: localClasses.formControlLabel,
    control: /*#__PURE__*/_react.default.createElement(_Checkbox.default, {
      checked: checked || indeterminate,
      className: localClasses.checkbox,
      indeterminate: indeterminate,
      onChange: function onChange(event) {
        return onSelectAllChange(event, toggleSelectAll);
      }
    }),
    disabled: noItems,
    label: checkAllText
  })), /*#__PURE__*/_react.default.createElement(_Grid.default, {
    container: true,
    item: true,
    justify: "flex-end",
    xs: true
  }, actions)))), actionableItems && _ref9);
};

ListBoxActionBar.propTypes = process.env.NODE_ENV !== "production" ? {
  actionableItems: _propTypes.default.arrayOf(_propTypes.default.shape({})).isRequired,
  actions: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]),
  checkAllText: _propTypes.default.string.isRequired,
  items: _propTypes.default.arrayOf(_propTypes.default.shape({})).isRequired,
  onSelectAllChange: _propTypes.default.func.isRequired,
  rowHeight: _propTypes.default.number.isRequired,
  showCheckAll: _propTypes.default.bool.isRequired
} : {};
ListBoxActionBar.defaultProps = {
  actions: undefined
};
var _default = ListBoxActionBar;
exports.default = _default;