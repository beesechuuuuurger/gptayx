"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ListContainerPropTypes = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _lodash = require("lodash");

var _reactWindow = require("react-window");

var _Grid = _interopRequireDefault(require("../Grid"));

var _ListItem = _interopRequireDefault(require("../ListItem"));

var _ListItemText = _interopRequireDefault(require("../ListItemText"));

var _ListBoxItem = _interopRequireDefault(require("./ListBoxItem"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var ListContainerPropTypes = {
  'aria-describedby': _propTypes.default.string,
  'aria-label': _propTypes.default.string,
  'aria-labelledby': _propTypes.default.string,
  dividers: _propTypes.default.bool,
  filteredItems: _propTypes.default.arrayOf(_propTypes.default.shape({})).isRequired,
  gutter: _propTypes.default.number.isRequired,
  items: _propTypes.default.arrayOf(_propTypes.default.shape({
    name: _propTypes.default.string.isRequired,
    value: _propTypes.default.string.isRequired,
    selected: _propTypes.default.bool
  })).isRequired,
  ListItemTextComponent: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.element, _propTypes.default.func]).isRequired,
  noResultsRowHeight: _propTypes.default.number.isRequired,
  noResultsText: _propTypes.default.string.isRequired,
  onSelect: _propTypes.default.func.isRequired,
  role: _propTypes.default.string,
  virtualizationProps: _propTypes.default.objectOf(_propTypes.default.any)
};
exports.ListContainerPropTypes = ListContainerPropTypes;
var ListContainerDefaultProps = {
  'aria-describedby': undefined,
  'aria-label': undefined,
  'aria-labelledby': undefined,
  dividers: false,
  role: undefined,
  virtualizationProps: {}
};
var ListBoxItemRendererPropTypes = process.env.NODE_ENV !== "production" ? {
  data: _propTypes.default.shape({
    items: _propTypes.default.arrayOf(_propTypes.default.shape({
      disabled: _propTypes.default.bool,
      displayName: _propTypes.default.node,
      divider: _propTypes.default.bool,
      name: _propTypes.default.string,
      selected: _propTypes.default.bool,
      tooltip: _propTypes.default.string,
      value: _propTypes.default.string
    })),
    setItemRef: _propTypes.default.func.isRequired,
    ListItemTextComponent: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.element, _propTypes.default.func]).isRequired,
    handleKeyDown: _propTypes.default.func.isRequired,
    onSelect: _propTypes.default.func.isRequired,
    dividers: _propTypes.default.Boolean,
    gutter: _propTypes.default.number.isRequired
  }).isRequired,
  index: _propTypes.default.number.isRequired,
  style: _propTypes.default.objectOf(_propTypes.default.any)
} : {};
var ListBoxItemRendererDefaultProps = {
  style: {}
};

function ListBoxItemRenderer(_ref) {
  var classes = _ref.classes,
      data = _ref.data,
      index = _ref.index,
      style = _ref.style;
  var listBoxDividers = data.dividers,
      items = data.items,
      setItemRef = data.setItemRef,
      ListItemTextComponent = data.ListItemTextComponent,
      handleKeyDown = data.handleKeyDown,
      onSelect = data.onSelect,
      gutter = data.gutter;
  var _items$index = items[index],
      disabled = _items$index.disabled,
      displayName = _items$index.displayName,
      itemDivider = _items$index.divider,
      name = _items$index.name,
      selected = _items$index.selected,
      tooltip = _items$index.tooltip,
      value = _items$index.value;

  var _useMemo = (0, _react.useMemo)(function () {
    return {
      itemRef: setItemRef(index),
      onKeyDown: handleKeyDown(index),
      onChange: onSelect(value)
    };
  }, [index, setItemRef, handleKeyDown, onSelect, value]),
      itemRef = _useMemo.itemRef,
      onKeyDown = _useMemo.onKeyDown,
      onChange = _useMemo.onChange;

  var divider = typeof itemDivider === 'undefined' ? listBoxDividers : itemDivider;
  return /*#__PURE__*/_react.default.createElement(_ListBoxItem.default, {
    classes: classes,
    disabled: disabled,
    displayName: displayName,
    divider: divider // Material will style the last child's border to be transparent
    ,
    index: index,
    itemRef: itemRef,
    ListItemTextComponent: ListItemTextComponent,
    name: name,
    onChange: onChange,
    onKeyDown: onKeyDown,
    selected: Boolean(selected),
    style: (0, _extends2.default)({}, style, {
      top: "".concat(parseFloat(style.top) + gutter, "px")
    }),
    tooltip: tooltip
  });
}

ListBoxItemRenderer.propTypes = process.env.NODE_ENV !== "production" ? ListBoxItemRendererPropTypes : {};
ListBoxItemRenderer.defaultProps = ListBoxItemRendererDefaultProps;

var InnerElementType = function InnerElementType(gutter) {
  return (
    /*#__PURE__*/
    // eslint-disable-next-line react/prop-types
    (0, _react.forwardRef)(function (_ref2, ref) {
      var style = _ref2.style,
          rest = (0, _objectWithoutProperties2.default)(_ref2, ["style"]);
      return /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
        ref: ref,
        style: (0, _extends2.default)({}, style, {
          // eslint-disable-next-line react/prop-types
          height: "".concat(parseFloat(style.height) + gutter * 2, "px")
        })
      }, rest));
    })
  );
};

function ListBoxContainer(_ref3) {
  var classes = _ref3.classes,
      dividers = _ref3.dividers,
      filteredItems = _ref3.filteredItems,
      gutter = _ref3.gutter,
      items = _ref3.items,
      ListItemTextComponent = _ref3.ListItemTextComponent,
      noResultsText = _ref3.noResultsText,
      onSelect = _ref3.onSelect,
      noResultsRowHeight = _ref3.noResultsRowHeight,
      virtualizationProps = _ref3.virtualizationProps,
      props = (0, _objectWithoutProperties2.default)(_ref3, ["classes", "dividers", "filteredItems", "gutter", "items", "ListItemTextComponent", "noResultsText", "onSelect", "noResultsRowHeight", "virtualizationProps"]);
  var itemsRef = (0, _react.useRef)({});
  var setItemRef = (0, _react.useCallback)(function (index) {
    return function (el) {
      if (el) {
        itemsRef.current[index] = el;
      }
    };
  }, [itemsRef]);
  var handleKeyDown = (0, _react.useCallback)(function (index) {
    return function (event) {
      var key = event.key;
      var handleKeys = ['ArrowDown', 'Down', 'ArrowUp', 'Up'];
      var captureKeys = [' '];

      if (handleKeys.includes(key)) {
        // Run focusing onto the next
        event.stopPropagation();
        event.preventDefault();
        var nextIndex = ['ArrowUp', 'Up'].includes(key) ? index - 1 : index + 1;
        var item = (0, _lodash.get)(itemsRef, "current.".concat(nextIndex)); // break if not exist

        if ((0, _lodash.isEmpty)(item)) {
          return;
        }

        item.focus();
      }

      if (captureKeys.includes(key)) {
        event.preventDefault();
      }
    };
  }, [itemsRef]);

  var wrapper = function wrapper(WrappedComponent) {
    return function (wrapperProps) {
      return /*#__PURE__*/_react.default.createElement(WrappedComponent, (0, _extends2.default)({
        classes: classes
      }, wrapperProps));
    };
  };

  var NewListBoxItemRenderer = wrapper(ListBoxItemRenderer);
  return /*#__PURE__*/_react.default.createElement(_Grid.default, {
    item: true,
    xs: true
  }, /*#__PURE__*/_react.default.createElement("div", {
    "aria-describedby": props['aria-describedby'],
    "aria-label": props['aria-label'],
    "aria-labelledby": props['aria-labelledby'],
    role: props.role
  }, filteredItems.length === 0 ?
  /*#__PURE__*/
  // Only adding dense and disableGutters here for consistency's sake. They are not necessary or terribly useful here.
  _react.default.createElement(_ListItem.default, {
    dense: true,
    disableGutters: true,
    style: {
      height: noResultsRowHeight
    }
  }, /*#__PURE__*/_react.default.createElement(_ListItemText.default, {
    primary: noResultsText,
    primaryTypographyProps: {
      variant: 'body1',
      className: classes.noResultsTypography
    }
  })) : /*#__PURE__*/_react.default.createElement(_reactWindow.FixedSizeList, (0, _extends2.default)({}, virtualizationProps, {
    className: classes.container,
    innerElementType: InnerElementType(gutter) // Handle additional top and bottom gutter on the list
    ,
    itemData: {
      items: items,
      setItemRef: setItemRef,
      ListItemTextComponent: ListItemTextComponent,
      handleKeyDown: handleKeyDown,
      classes: classes.item,
      onSelect: onSelect,
      dividers: dividers,
      gutter: gutter
    },
    style: {
      outline: 'none'
    }
  }), NewListBoxItemRenderer)));
}

ListBoxContainer.propTypes = process.env.NODE_ENV !== "production" ? ListContainerPropTypes : {};
ListBoxContainer.defaultProps = ListContainerDefaultProps;
var _default = ListBoxContainer;
exports.default = _default;