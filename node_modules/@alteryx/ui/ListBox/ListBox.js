"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.propTypes = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _lodash = require("lodash");

var _Grid = _interopRequireDefault(require("../Grid"));

var _ListItemText = _interopRequireDefault(require("../ListItemText"));

var _Typography = _interopRequireDefault(require("../Typography"));

var _Box = _interopRequireDefault(require("../Box"));

var _withStyles = _interopRequireDefault(require("@material-ui/core/styles/withStyles"));

var _ListBoxSearch = _interopRequireDefault(require("./ListBoxSearch"));

var _ListBoxActionBar = _interopRequireDefault(require("./ListBoxActionBar"));

var _ListBoxContainer = _interopRequireDefault(require("./ListBoxContainer"));

var _ListBoxFooter = _interopRequireDefault(require("./ListBoxFooter"));

var _theme = _interopRequireDefault(require("./theme"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var ROW_HEIGHT = 37;
var GUTTER = 4;
var ROW_WITH_DIVIDER_HEIGHT = ROW_HEIGHT + 1;
var gridHandleScrollPath = 'current.Grid.handleScrollEvent';
var propTypes = {
  actions: _propTypes.default.node,
  'aria-describedby': _propTypes.default.string,
  'aria-label': _propTypes.default.string,
  'aria-labelledby': _propTypes.default.string,
  checkAllText: _propTypes.default.string,
  classes: _propTypes.default.objectOf(_propTypes.default.any),
  'data-uic': _propTypes.default.string.isRequired,
  dividers: _propTypes.default.bool,
  footerText: _propTypes.default.string,
  hideFooter: _propTypes.default.bool,
  items: _propTypes.default.arrayOf(_propTypes.default.shape({
    name: _propTypes.default.string.isRequired,
    tooltip: _propTypes.default.string,
    value: _propTypes.default.string.isRequired,
    selected: _propTypes.default.bool,
    disabled: _propTypes.default.bool
  })),
  ListItemTextComponent: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.element, _propTypes.default.func]),
  maxVisibleItems: _propTypes.default.number,
  noOptions: _propTypes.default.node,
  noResultsText: _propTypes.default.string,
  onChange: _propTypes.default.func.isRequired,
  searchLimit: _propTypes.default.number,
  searchPlaceholderText: _propTypes.default.string,

  /**
   * Return new lists.
   * @param {Object[]} items - The items list.
   * @param {string} items[].name - The name of an item.
   * @param {string} items[].value - The items's value.
   * @param {bool} items[].selected - Is an item selected.
   */
  showCheckAll: _propTypes.default.bool,
  showSearch: _propTypes.default.bool,
  subheader: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.node]),
  title: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.node])
};
exports.propTypes = propTypes;
var defaultProps = {
  'aria-describedby': undefined,
  'aria-label': undefined,
  'aria-labelledby': undefined,
  actions: null,
  checkAllText: 'Check All',
  classes: {},
  dividers: false,
  footerText: '{checked} of {total} Checked',
  hideFooter: false,
  items: [],
  ListItemTextComponent: _ListItemText.default,
  maxVisibleItems: 7.5,
  noOptions: null,
  noResultsText: 'No results',
  searchLimit: 20,
  searchPlaceholderText: 'Search',
  showCheckAll: true,
  showSearch: true,
  subheader: null,
  title: null
};

var ListBox = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(ListBox, _Component);

  var _super = _createSuper(ListBox);

  /* used for scrolling handling */
  function ListBox(_props) {
    var _this;

    (0, _classCallCheck2.default)(this, ListBox);
    _this = _super.call(this, _props);
    _this.containerRef = /*#__PURE__*/(0, _react.createRef)();

    _this.getActualHeight = function (quantity) {
      var _this$props = _this.props,
          maxVisibleItems = _this$props.maxVisibleItems,
          dividers = _this$props.dividers;
      if (quantity >= maxVisibleItems) return _this.gutter + _this.maxHeight;
      return _this.gutter * 2 + (dividers === true ? quantity * ROW_WITH_DIVIDER_HEIGHT : quantity * ROW_HEIGHT);
    };

    _this.handleScroll = function (_ref) {
      var _ref$target = _ref.target,
          scrollTop = _ref$target.scrollTop,
          scrollLeft = _ref$target.scrollLeft;
      return (0, _lodash.invoke)(_this.containerRef, gridHandleScrollPath, {
        scrollTop: scrollTop,
        scrollLeft: scrollLeft
      });
    };

    _this.comparator = function (keyword) {
      return function (item) {
        return !keyword || item.name.toLowerCase().includes(keyword.toLowerCase());
      };
    };

    _this.searcher = function (keyword) {
      var items = _this.props.items;
      return items.filter(_this.comparator(keyword));
    };

    _this.selector = function (value) {
      return function (event, selected) {
        var _this$props2 = _this.props,
            items = _this$props2.items,
            onChange = _this$props2.onChange;
        var keyword = _this.state.keyword;

        var comparator = _this.comparator(keyword);

        var internalIndex; // eslint-disable-next-line no-confusing-arrow

        var selectedItems = items // eslint-disable-next-line no-confusing-arrow
        .filter(function (item, i) {
          if (item.value === value) internalIndex = i;
          return value === null && !item.disabled && comparator(item) || value === item.value ? selected : item.selected;
        }).map(function (item) {
          return (0, _extends2.default)({}, item, {
            selected: true
          });
        });
        var action = {
          selected: selected,
          value: value,
          itemsIndex: value === null ? 'all' : internalIndex
        }; // TODO: turn this into an object so people can destructure what they want

        onChange(event, selectedItems, action);
      };
    };

    _this.getAlternativeAriaLabelledby = function (props, uuid) {
      return typeof props['aria-label'] === 'undefined' && typeof props.title === 'string' ? uuid : undefined;
    };

    _this.getAlternativeAriaDescribedby = function (props, uuid) {
      return typeof props.subheader === 'string' ? uuid : undefined;
    };

    _this.RenderTitle = function (_ref2) {
      var id = _ref2.id;
      var _this$props3 = _this.props,
          classes = _this$props3.classes,
          title = _this$props3.title;
      return title && /*#__PURE__*/_react.default.createElement(_Grid.default, {
        item: true,
        xs: "auto"
      }, typeof title === 'string' ? /*#__PURE__*/_react.default.createElement(_Typography.default, {
        className: classes.titleTypography,
        color: "textSecondary",
        gutterBottom: false,
        id: id
      }, title) : title);
    };

    _this.RenderSubheader = function (_ref3) {
      var id = _ref3.id;
      var subheader = _this.props.subheader;
      return subheader && /*#__PURE__*/_react.default.createElement(_Grid.default, {
        item: true,
        xs: "auto"
      }, typeof subheader === 'string' ? /*#__PURE__*/_react.default.createElement(_Box.default, {
        mt: -0.5
      }, /*#__PURE__*/_react.default.createElement(_Typography.default, {
        gutterBottom: false,
        id: id,
        variant: "subtitle2"
      }, subheader)) : subheader);
    };

    _this.RenderFooter = function (_ref4) {
      var checkedCount = _ref4.checkedCount,
          classes = _ref4.classes,
          footerText = _ref4.footerText,
          hideFooter = _ref4.hideFooter,
          totalCount = _ref4.totalCount;
      return totalCount > 0 && !hideFooter && /*#__PURE__*/_react.default.createElement(_Grid.default, {
        item: true,
        xs: "auto"
      }, /*#__PURE__*/_react.default.createElement(_ListBoxFooter.default, {
        checkedCount: checkedCount,
        classes: classes,
        footerText: footerText,
        totalCount: totalCount
      }));
    };

    var _this$props4 = _this.props,
        _maxVisibleItems = _this$props4.maxVisibleItems,
        _dividers = _this$props4.dividers;
    _this.state = {
      keyword: null
    };
    _this.maxHeight = _dividers === true ? ROW_WITH_DIVIDER_HEIGHT * _maxVisibleItems : ROW_HEIGHT * _maxVisibleItems;
    _this.gutter = _dividers ? 0 : GUTTER;
    return _this;
  }

  (0, _createClass2.default)(ListBox, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props5 = this.props,
          classes = _this$props5.classes,
          dataUIC = _this$props5['data-uic'],
          dividers = _this$props5.dividers,
          items = _this$props5.items,
          showSearch = _this$props5.showSearch,
          noOptions = _this$props5.noOptions,
          searchLimit = _this$props5.searchLimit;

      var createId = function createId() {
        var newMS = new Date().getTime();
        var ranNum = Math.random().toString(36);
        return "".concat(newMS, "-").concat(ranNum);
      };

      var keyword = this.state.keyword;
      var filteredItems = this.searcher(keyword);
      var quantity = filteredItems.length;
      var actualHeight = this.getActualHeight(quantity);
      var titleId = createId();
      var subheaderId = createId();
      var actionableItems = filteredItems || items;
      var nonDisabledItemsCount = items.filter(function (_ref5) {
        var disabled = _ref5.disabled;
        return !disabled;
      }).length;
      var checkedItemsCount = items.filter(function (_ref6) {
        var selected = _ref6.selected;
        return selected === true;
      }).length;
      var renderNoOptions = items.length === 0;
      return /*#__PURE__*/_react.default.createElement(_Grid.default, {
        className: classes.listBox,
        container: true,
        "data-uic": dataUIC,
        direction: "column"
      }, renderNoOptions ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(this.RenderTitle, {
        id: titleId
      }), /*#__PURE__*/_react.default.createElement(this.RenderSubheader, {
        id: subheaderId
      }), /*#__PURE__*/_react.default.createElement(_Grid.default, {
        item: true
      }, noOptions)) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(this.RenderTitle, {
        id: titleId
      }), /*#__PURE__*/_react.default.createElement(this.RenderSubheader, {
        id: subheaderId
      }), showSearch && (0, _lodash.gte)(items.length, searchLimit) && /*#__PURE__*/_react.default.createElement(_Grid.default, {
        item: true,
        xs: "auto"
      }, /*#__PURE__*/_react.default.createElement(_ListBoxSearch.default, (0, _extends2.default)({}, this.props, {
        onChange: function onChange(term) {
          return _this2.setState({
            keyword: term
          });
        }
      }))), /*#__PURE__*/_react.default.createElement(_ListBoxActionBar.default, (0, _extends2.default)({}, this.props, {
        actionableItems: actionableItems,
        filteredItems: filteredItems,
        onSelectAllChange: this.selector(null),
        rowHeight: ROW_HEIGHT
      })), /*#__PURE__*/_react.default.createElement(_ListBoxContainer.default, (0, _extends2.default)({}, this.props, {
        "aria-describedby": this.props['aria-describedby'] || this.getAlternativeAriaDescribedby(this.props, subheaderId),
        "aria-label": this.props['aria-label'],
        "aria-labelledby": this.props['aria-labelledby'] || this.getAlternativeAriaLabelledby(this.props, titleId),
        filteredItems: filteredItems,
        gridRef: this.containerRef,
        gutter: this.gutter,
        items: filteredItems,
        noResultsRowHeight: ROW_HEIGHT,
        onSelect: this.selector,
        virtualizationProps: {
          height: actualHeight,
          itemCount: filteredItems.length,
          itemSize: dividers ? ROW_WITH_DIVIDER_HEIGHT : ROW_HEIGHT,
          width: '100%'
        }
      })), /*#__PURE__*/_react.default.createElement(this.RenderFooter, (0, _extends2.default)({}, this.props, {
        checkedCount: checkedItemsCount,
        totalCount: nonDisabledItemsCount
      }))));
    }
  }]);
  return ListBox;
}(_react.Component);

ListBox.propTypes = process.env.NODE_ENV !== "production" ? propTypes : {};
ListBox.defaultProps = defaultProps;

var _default = (0, _withStyles.default)(_theme.default, {
  name: 'MuiListBox'
})(ListBox);

exports.default = _default;