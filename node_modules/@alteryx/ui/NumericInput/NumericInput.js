"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends3 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _makeStyles = _interopRequireDefault(require("@material-ui/core/styles/makeStyles"));

var _createStyles = _interopRequireDefault(require("@material-ui/core/styles/createStyles"));

var _SmartCursorInput = _interopRequireDefault(require("./SmartCursorInput"));

var _NumericSpinner = _interopRequireDefault(require("./NumericSpinner"));

var _numericHoc = _interopRequireDefault(require("./numericHoc"));

var propTypes = (0, _extends3.default)({}, _SmartCursorInput.default.propTypes);
var defaultProps = {};
var useStyles = (0, _makeStyles.default)(function (_ref) {
  var spacing = _ref.spacing;
  return (0, _createStyles.default)({
    adornment: {
      lineHeight: '16px',
      userSelect: 'none'
    },
    adornmentStart: {
      paddingRight: 0
    },
    adornmentEnd: {
      marginRight: spacing(1)
    }
  });
});

var applyAdornmentStyle = function applyAdornmentStyle(component) {
  var _classNames;

  var classes = useStyles();
  return /*#__PURE__*/_react.default.cloneElement(component, (0, _extends3.default)({}, component.props, {
    disableTypography: true,
    className: (0, _classnames.default)(classes.adornment, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.adornmentStart, component.props.position === 'start'), (0, _defineProperty2.default)(_classNames, classes.adornmentEnd, component.props.position === 'end'), _classNames), component.props.className)
  }));
};

function NumericInput(_ref2) {
  var decrementButtonText = _ref2.decrementButtonText,
      endAdornment = _ref2.endAdornment,
      incrementButtonText = _ref2.incrementButtonText,
      startAdornment = _ref2.startAdornment,
      numericBlur = _ref2.numericBlur,
      numericChange = _ref2.numericChange,
      numericStart = _ref2.numericStart,
      onChange = _ref2.onChange,
      numericStop = _ref2.numericStop,
      type = _ref2.type,
      fixedDecimal = _ref2.fixedDecimal,
      value = _ref2.value,
      classes = _ref2.classes,
      rest = (0, _objectWithoutProperties2.default)(_ref2, ["decrementButtonText", "endAdornment", "incrementButtonText", "startAdornment", "numericBlur", "numericChange", "numericStart", "onChange", "numericStop", "type", "fixedDecimal", "value", "classes"]);
  var disallowedProps = ['onBlur', 'onKeydown', 'onKeyUp']; // TODO: Replace with the util in core, once available

  function filterProps(incomingProps, disallowedPropNames) {
    return Object.entries(incomingProps).filter(function (_ref3) {
      var _ref4 = (0, _slicedToArray2.default)(_ref3, 1),
          key = _ref4[0];

      return !disallowedPropNames.includes(key);
    }).reduce(function (obj, _ref5) {
      var _ref6 = (0, _slicedToArray2.default)(_ref5, 2),
          key = _ref6[0],
          val = _ref6[1];

      return (0, _extends3.default)(obj, (0, _defineProperty2.default)({}, key, val));
    }, {});
  }

  var startAdornmentStyled = startAdornment && applyAdornmentStyle(startAdornment);
  var endAdornmentStyled = endAdornment && applyAdornmentStyle(endAdornment);
  return /*#__PURE__*/_react.default.createElement(_SmartCursorInput.default, (0, _extends3.default)({
    className: (0, _classnames.default)(classes.root, rest.className),
    disabled: rest.readOnly,
    endAdornment: /*#__PURE__*/_react.default.createElement(_NumericSpinner.default, (0, _extends3.default)({
      classes: classes,
      decrementButtonText: decrementButtonText,
      endAdornment: endAdornmentStyled,
      fixedDecimal: fixedDecimal,
      incrementButtonText: incrementButtonText,
      onChange: onChange,
      type: type,
      value: value
    }, rest)),
    onBlur: numericBlur,
    onChange: numericChange,
    onKeyDown: numericStart(),
    onKeyUp: numericStop(),
    startAdornment: startAdornmentStyled,
    type: "text"
  }, filterProps(rest, disallowedProps), {
    value: value
  }));
}

NumericInput.propTypes = process.env.NODE_ENV !== "production" ? propTypes : {};
NumericInput.defaultProps = defaultProps;

var _default = (0, _numericHoc.default)(NumericInput);

exports.default = _default;