"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var tooltipPlacementMargin = function tooltipPlacementMargin(theme) {
  return {
    topOrBottom: (0, _defineProperty2.default)({
      margin: "".concat(theme.spacing(1), "px 0")
    }, theme.breakpoints.up('sm'), {
      margin: "".concat(theme.spacing(1), "px 0")
    }),
    leftOrRight: (0, _defineProperty2.default)({
      margin: "0 ".concat(theme.spacing(1), "px")
    }, theme.breakpoints.up('sm'), {
      margin: "0 ".concat(theme.spacing(1), "px")
    })
  };
};

var MTooltip = function MTooltip(theme) {
  return {
    arrow: {
      color: theme.palette.type === 'dark' ? theme.palette.blueGrey[700] : theme.palette.brand.deepSpace
    },
    tooltip: (0, _extends2.default)({
      fontSize: theme.typography.pxToRem(12),
      fontWeight: 'normal',
      lineHeight: 1.33,
      backgroundColor: theme.palette.type === 'dark' ? theme.palette.blueGrey[700] : theme.palette.brand.deepSpace,
      color: theme.palette.type === 'dark' ? theme.palette.blueGrey[50] : theme.palette.info.contrastText,
      padding: "4px ".concat(theme.spacing(2), "px"),
      borderRadius: "".concat(theme.spacing(1), "px"),
      borderColor: 'transparent'
    }, theme.zDepth.for('tooltip')),
    popper: {
      opacity: 1
    },

    /* Styles applied to the tooltip (label wrapper) element if `placement` contains "left". */
    tooltipPlacementLeft: (0, _extends2.default)({
      transformOrigin: 'right center'
    }, tooltipPlacementMargin(theme).leftOrRight, {
      '&$tooltipArrow': {
        margin: theme.spacing(0, 2.5)
      },
      '& > .MuiTooltip-arrow': {
        transform: 'scaleY(0.8)',
        marginRight: '-0.68em !important' // to counteract materials calculation of -0.71 which leaves a small gap visible

      }
    }),

    /* Styles applied to the tooltip (label wrapper) element if `placement` contains "right". */
    tooltipPlacementRight: (0, _extends2.default)({
      transformOrigin: 'left center'
    }, tooltipPlacementMargin(theme).leftOrRight, {
      '&$tooltipArrow': {
        margin: theme.spacing(0, 2.5)
      },
      '& > .MuiTooltip-arrow': {
        transform: 'scaleY(0.8)',
        marginLeft: '-0.68em !important' // to counteract materials calculation of -0.71 which leaves a small gap visible

      }
    }),

    /* Styles applied to the tooltip (label wrapper) element if `placement` contains "top". */
    tooltipPlacementTop: (0, _extends2.default)({
      transformOrigin: 'center bottom'
    }, tooltipPlacementMargin(theme).topOrBottom, {
      '&$tooltipArrow': {
        margin: theme.spacing(2.5, 0)
      },
      '& > .MuiTooltip-arrow': {
        transform: 'scaleX(0.8)',
        marginBottom: '-0.68em !important' // to counteract materials calculation of -0.71 which leaves a small gap visible

      }
    }),

    /* Styles applied to the tooltip (label wrapper) element if `placement` contains "bottom". */
    tooltipPlacementBottom: (0, _extends2.default)({
      transformOrigin: 'center top'
    }, tooltipPlacementMargin(theme).topOrBottom, {
      '&$tooltipArrow': {
        margin: theme.spacing(2.5, 0)
      },
      '& > .MuiTooltip-arrow': {
        transform: 'scaleX(0.8)',
        marginTop: '-0.68em !important' // to counteract materials calculation of -0.71 which leaves a small gap visible

      }
    })
  };
};

var _default = function _default(theme) {
  return {
    MuiTooltip: MTooltip(theme)
  };
};

exports.default = _default;